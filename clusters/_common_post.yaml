#########################################################
#   NATS Operator
#########################################################
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: nats-ca
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-ca
  namespace: __NAMESPACE__
spec:
  commonName: nats-ca
  duration: 8736h # 1 year
  isCA: true
  issuerRef:
    name: nats-ca
    kind: ClusterIssuer
  renewBefore: 240h # 10 days
  secretName: nats-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-server-tls
  namespace: __NAMESPACE__
spec:
  commonName: nats.__NAMESPACE__.svc
  dnsNames:
    - nats
    - nats.__NAMESPACE__.svc
  duration: 2160h # 90 days
  issuerRef:
    name: nats-ca
    kind: Issuer
  renewBefore: 240h # 10 days
  secretName: nats-server-tls
  usages:
    - key encipherment
    - server auth
    - signing
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-routes-tls
  namespace: __NAMESPACE__
spec:
  commonName: "*.nats-mgmt.__NAMESPACE__.svc"
  dnsNames:
    - "*.nats-mgmt"
    - "*.nats-mgmt.__NAMESPACE__.svc"
  duration: 2160h # 90 days
  issuerRef:
    name: nats-ca
    kind: Issuer
  renewBefore: 240h # 10 days
  secretName: nats-routes-tls
  usages:
    - client auth # included because routes mutually verify each other
    - key encipherment
    - server auth
    - signing
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: nats-ca
  namespace: __NAMESPACE__
spec:
  ca:
    secretName: nats-ca
---
apiVersion: nats.io/v1alpha2
kind: NatsCluster
metadata:
  name: nats
  namespace: __NAMESPACE__
spec:
  auth:
    # NOTE: Only supported in Kubernetes v1.12+ clusters having the "TokenRequest" API enabled.
    enableServiceAccounts: true # NOTE: not supported in aarch64 yet

  pod:
    # NOTE: Only supported in Kubernetes v1.12+.
    enableConfigReload: true # NOTE: not supported in aarch64 yet

    # EnableMetrics attaches a sidecar to each NATS Server
    # that will export prometheus metrics.
    enableMetrics: true

    # NodeSelector specifies a map of key-value pairs.
    # For the pod to be eligible to run on a node,
    # the node must have each of the indicated key-value pairs as labels.
    nodeSelector:
      kubernetes.io/arch: amd64

  # Number of nodes in the cluster
  size: 1

  # tls:
  #   # Certificates to secure the NATS client connections:
  #   serverSecret: nats-server-tls
  #   # Name of the CA in serverSecret
  #   serverSecretCAFileName: ca.crt
  #   # Name of the key in serverSecret
  #   serverSecretKeyFileName: tls.key
  #   # Name of the certificate in serverSecret
  #   serverSecretCertFileName: tls.crt

  #   # Certificates to secure the routes.
  #   routesSecret: nats-routes-tls
  #   # Name of the CA in routesSecret
  #   routesSecretCAFileName: ca.crt
  #   # Name of the key in routesSecret
  #   routesSecretKeyFileName: tls.key
  #   # Name of the certificate in routesSecret
  #   routesSecretCertFileName: tls.crt
#########################################################
#   NATS Client
#########################################################
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka
  namespace: __NAMESPACE__
spec:
  kafka:
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
    replicas: 1
    storage:
      type: ephemeral
    template:
      pod:
        affinity:
          nodeAffinity:
            # KISS normal control plane nodes should be preferred
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                      operator: DoesNotExist
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                        - amd64
                    - key: node-role.kubernetes.io/kiss
                      operator: In
                      values:
                        - Compute
  entityOperator: {}
  zookeeper:
    replicas: 1
    storage:
      type: ephemeral
    template:
      pod:
        affinity:
          nodeAffinity:
            # KISS normal control plane nodes should be preferred
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                      operator: DoesNotExist
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                        - amd64
                    - key: node-role.kubernetes.io/kiss
                      operator: In
                      values:
                        - Compute
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: image
  labels:
    strimzi.io/cluster: kafka
spec:
  partitions: 1
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: object-detection
  labels:
    strimzi.io/cluster: kafka
spec:
  partitions: 1
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: performance-test-dst
  labels:
    strimzi.io/cluster: kafka
spec:
  partitions: 1
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: performance-test-src
  labels:
    strimzi.io/cluster: kafka
spec:
  partitions: 1
  replicas: 1
#########################################################
#   NATS Client
#########################################################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nats-admin-user
  namespace: __NAMESPACE__
---
apiVersion: nats.io/v1alpha2
kind: NatsServiceRole
metadata:
  name: nats-admin-user
  namespace: __NAMESPACE__
  # Specifies which NATS cluster will be mapping this account.
  labels:
    nats_cluster: nats
spec:
  permissions:
    publish:
      - "image"
      - "image.>"
      - "object-detection"
      - "object-detection.>"
      - "performance-test-dst"
      - "performance-test-dst.>"
      - "performance-test-src"
      - "performance-test-src.>"
    subscribe:
      - "image"
      - "image.>"
      - "object-detection"
      - "object-detection.>"
      - "performance-test-dst"
      - "performance-test-dst.>"
      - "performance-test-src"
      - "performance-test-src.>"
#########################################################
#   Models
#########################################################
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: image
  namespace: __NAMESPACE__
spec:
  dynamic: {}
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: Model
metadata:
  name: object-detection
  namespace: __NAMESPACE__
spec:
  dynamic: {}
#########################################################
#   Model Storages
#########################################################
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: tenant-a
  namespace: __NAMESPACE__
  labels:
    dash.ulagbulag.io/alias: borrowed-data-pond
    dash.ulagbulag.io/borrowed-from: tenant-a
    dash.ulagbulag.io/kind: connected-data-lake
spec:
  objectStorage:
    borrowed:
      endpoint: http://210.125.84.97
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: tenant-b
  namespace: __NAMESPACE__
  labels:
    dash.ulagbulag.io/alias: borrowed-data-pond
    dash.ulagbulag.io/borrowed-from: tenant-b
    dash.ulagbulag.io/kind: connected-data-lake
spec:
  objectStorage:
    borrowed:
      endpoint: http://210.125.84.101
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: tenant-c
  namespace: __NAMESPACE__
  labels:
    dash.ulagbulag.io/alias: borrowed-data-pond
    dash.ulagbulag.io/borrowed-from: tenant-c
    dash.ulagbulag.io/kind: connected-data-lake
spec:
  objectStorage:
    borrowed:
      endpoint: http://210.125.84.105
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
---
apiVersion: dash.ulagbulag.io/v1alpha1
kind: ModelStorage
metadata:
  name: tenant-d
  namespace: __NAMESPACE__
  labels:
    dash.ulagbulag.io/alias: borrowed-data-pond
    dash.ulagbulag.io/borrowed-from: tenant-d
    dash.ulagbulag.io/kind: connected-data-lake
spec:
  objectStorage:
    borrowed:
      endpoint: http://210.125.85.55
      secretRef:
        mapAccessKey: CONSOLE_ACCESS_KEY
        mapSecretKey: CONSOLE_SECRET_KEY
        name: object-storage-user-0
#########################################################
#   External Endpoints
#########################################################
---
apiVersion: v1
kind: Endpoints
metadata:
  name: tenant-a
  namespace: __NAMESPACE__
subsets:
  - addresses:
      - ip: 210.125.84.97
    ports:
      - name: http
        port: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: tenant-b
  namespace: __NAMESPACE__
subsets:
  - addresses:
      - ip: 210.125.84.101
    ports:
      - name: http
        port: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: tenant-c
  namespace: __NAMESPACE__
subsets:
  - addresses:
      - ip: 210.125.84.105
    ports:
      - name: http
        port: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: tenant-d
  namespace: __NAMESPACE__
subsets:
  - addresses:
      - ip: 210.125.85.55
    ports:
      - name: http
        port: 80
---
apiVersion: v1
kind: Endpoints
metadata:
  name: tenant-all
  namespace: __NAMESPACE__
subsets:
  - addresses:
      - ip: 210.125.84.97
      - ip: 210.125.84.101
      - ip: 210.125.84.105
      - ip: 210.125.85.55
    ports:
      - name: http
        port: 80
#########################################################
#   Headless External Services
#########################################################
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-a
  namespace: __NAMESPACE__
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-b
  namespace: __NAMESPACE__
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-c
  namespace: __NAMESPACE__
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-d
  namespace: __NAMESPACE__
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-all
  namespace: __NAMESPACE__
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
